/*
What is React?
React is the core library that handles all component creation related for UI 
It can be used in phones and different platforms Its used to define structure of UI

What is React?
reactDOM is used for web DOM manipulations , rESPONSIBLE FOR RENDERING REACT COMPOnents to Web

What is Rendering?
Rendering is a process of Converting react components into HTML elements that can be attached to DOM and displayed on Browser

What is npm?
Commnd: npm init ---creates a package.json
It is not a Node Package Manager it has no abbreviation it is just a pacakge manager, it manages all packages we use in our App
Use npm init to get npm to our APP

what is Package.json?
when we install or get npm into our app it will create a package.json file which has all details of dependencies and packages
that we use in our app example versions on all packages their detials etc...

What is most imp package or dependency?
It is Bundler
3 types of bundler -- Webpack, Parcel, Vite

Dependencies--
There are two types of Dependencies
1)Dev Dependencies --It requires in Dev env only
2)Normal Dependencies -- It requires in Prod

Install Parcel-- A bundler to bundle all files to improve performance
Command:-npm install -D parcel --creates a package-lock.json

what is ^(caret) and tilde(~) before any version:
^ installs minor versions like 2.8.3 to 2.8.3
~ installs major versions like 2.8.3 to 3.0.1

package.lock.json:
it keeps exact version of parcel

Transitive Dependencies:
Dependency having one more dependency , which has one more dependency and goes on
ex: our project is dependend on Parcel and it depends on lot of other things
 
parcel will genarate nodeModules:
we don't push it to prod server, coz we can generate all node modules with package.json and package-lock.json
coz, they have all exact versions
we can also use npm install to install node modules.

npx parcel index.html to build our app - it will load our app  in to server ---Server running at http://localhost:1234
parcel created a server and it hosted it on to our server

npx- to excecuting a package
npm - to install a package

cdn links is not preffered way to use react

Parcel -----It Does
--Dev Build
--Local Server
--HMR- hot module Replacement
--File watching Algorithm - Written in c++
--Cashing - Faster Builds
--Image Optimization
--Minification
--Bundling
--Compress file
--Consistent Hashing
--Code Splitting
--Differencial Bundling --Support Older browsers
-- Diagnostic
--Error Handling
--HTTPs
--Tree Scaling - remove unsed files


JSX - Html like syntax

Babel:--
JSX code is Transpiled before it reaches the JS ENgine by Babel which is inside the prcel
Code flow: 
JSX => React.createElement => ReactElement-JS Object => HTMLElemet(render)

const jsxElement = <h1>This is from JSX</h1>;
                || Transpiled by babel
                \/
const jsxElement = React.createElement("h1",{id:"jsxElement"},"This is from JSX");
                || by Core React 
                \/
            JS Object 
                || by JS Engine at Browser
                \/
             HTML CODE 

What is React Component?
There are two types of components in react 
Class based component and Functional component.


React Functionl Component:
A function which returns react element (some piece of JSX which can be translated to react Element) is called React Functionl Component

Component Composition-Composing two components into one another.

Props:
Passing some values to a components like function args are called props.

Config Driven UI:
UI is rendered based on data comming from backend EX: 
different locations need different types of cards or offers


Optional chaining (?.):
The optional chaining (?.) operator accesses an object's property or calls a function. If the object accessed or function called using this operator is undefined or null, the expression short circuits and evaluates to undefined instead of throwing an error.

Props:
React components use props to communicate with each other. Every parent component can pass some information to its child components by giving them props. Props might remind you of HTML attributes, but you can pass any JavaScript value through them, including objects, arrays, and functions.

key inbuild keyword:
The key prop is a special property in React that helps React keep track of elements. Itâ€™s like giving each element or component a unique ID. This ID lets React know that the element is different from the others, even if it looks the same.
Ex: if in future if we get an item at 0th position, React DOM Cannot identify which item is unique and it will rerender all items again
to avoid this if we send item with unique ID it will differentiate this new item and only render that item instead of rendering entire or all items



*/